//排序
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        if(nums.size()<=1)
            return false;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-1;++i)
        {
            if(nums[i]==nums[i+1])
                return true;
        }
        return false;
    }
};

//哈希（数组不能有负数）
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {

        unordered_map <int,int>mp;
        for(int i:nums)
        {
            mp[i]++;  //i对应的value值++

            if(mp[i]>1) //i对应的value值大于1，则说明存在重复元素
                return true;
        }
        return false;
    }
};

//利用集合
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {

        unordered_set <int> st (nums.begin(),nums.end());
        return nums.size() > st.size();//如果原数组的大小大于集合的大小，则说明存在重复元素
    }
};

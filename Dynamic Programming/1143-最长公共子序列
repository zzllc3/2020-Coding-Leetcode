class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) {
        int m = text1.size(),n = text2.size();
        //dp[i][j]返回 s1[0..i] 和 s2[0..j] 的最长公共子序列
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        //base
        for (int i = 1; i <= m; i++)
            dp[i][0] = 0;
        for (int j = 1; j <= n; j++)
            dp[0][j] = 0;
        for(int i=1;i<=m;++i)
        {
            for(int j=1;j<=n;++j)
            {
                if(text1[i-1]==text2[j-1])
                    dp[i][j] = dp[i-1][j-1] + 1;//找到一个，指针后移
                else
                {
                    dp[i][j] = max(dp[i][j-1],dp[i-1][j]);//至少一个不在lcs中，丢弃并后移，两种情况
                }
            }
        }
        return dp[m][n];
    }
};

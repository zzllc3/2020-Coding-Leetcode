//c3
class Solution {
public:
    int res = 0;
    vector<int> dx = { -1,1,0,0 };
    vector<int> dy = { 0,0,-1,1 };
    void dfs(vector<vector<bool>>& visit, int x, int y, int m, int n, int k)
    {
        int tempx = x;
        int tempy = y;
        int sum = 0;
        while (tempx)
        {
            sum += tempx % 10;
            tempx /= 10;
        }
        while (tempy)
        {
            sum += tempy % 10;
            tempy /= 10;
        }
        if (x >= 0 && x < m && y >= 0 && y < n && !visit[x][y]&& sum <= k)
        {
            visit[x][y] = true;
            res++;
            for (int i = 0;i < 4;++i)
            {
                dfs(visit, x + dx[i], y + dy[i], m, n, k);
            }
        }
    }
    int movingCount(int m, int n, int k) {
        vector<vector<bool>> visit(m, vector<bool>(n, false));
        dfs(visit, 0, 0, m, n, k);
        return res;
    }
};

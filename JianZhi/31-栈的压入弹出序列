//c3
class Solution {
public:
    bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
        stack<int> st;
        int pushindex = 0;
        for(int i=0;i<popped.size();++i)
        {
            while((st.empty()||st.top()!=popped[i])&&pushindex<pushed.size())
            {
                st.push(pushed[pushindex]);
                pushindex++;
            }
            if(st.top()==popped[i])
                st.pop();
            else
                return false;
        }
        return true;
    }
};

class Solution {
public:
    bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
        stack<int> help;
        int pushSize = pushed.size(), popSize = popped.size();
        int pos = 0;
        for(int i=0; i<pushSize; ++i)
        {
            help.push(pushed[i]);
            while(!help.empty() && help.top() == popped[pos])
            {
                help.pop();
                pos ++;
            }
        }
        return help.empty();
    }
};


//两次翻转
class Solution {
public:
    string reverseWords(string s) {
        if(s.size() == 0) return "";
        int k = 0,e = s.size()-1;
        while(k < s.size() && s[k] == ' ') k++; // 去掉前面的空格
        while(e >= 0 && s[e] == ' ') e--; // 去掉后面的空格
        if(k >= s.size() || e < 0) return "";
        string tmps = "",ans = "";
        for(int i = k; i <= e; i++)
        {
            if(s[i] != ' ')
                tmps+=s[i];
            else
            {
                while(s[i] == ' ') i++; i--;
                ans+=swapstr(tmps);
                ans+=" "; tmps="";
            }
        }
        ans += swapstr(tmps);
        return swapstr(ans);
    }
    // 交换的单个单词
    string swapstr(string s)
    {
        int i = 0, j = s.size() - 1;
        while(i < j) swap(s[i++],s[j--]);
        return s;
    }
};

class Solution {
public:
    string reverseWords(string s) {
        stack<string> stk;
        string res,str;
        istringstream ss(s);
        while (ss >> str) stk.push(str), stk.push(" ");
        if (!stk.empty()) stk.pop();
        while (!stk.empty()) res += stk.top(), stk.pop();
        return res;
    }
};

class Solution {
public:
    string reverseWords(string s) {
        istringstream ss(s);
        string res, str;
        while(ss >> str)
            res = str + ' ' + res;
        return res.substr(0, res.size() - 1);
    }
};

作者：OrangeMan
链接：https://leetcode-cn.com/problems/fan-zhuan-dan-ci-shun-xu-lcof/solution/cshuang-bai-zhan-by-orange-32/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

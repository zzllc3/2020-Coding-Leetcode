//哈希
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        unordered_set<ListNode*> nodes;
        while(headA!=nullptr)
        {
            nodes.insert(headA);
            headA = headA->next;
        }
        while(headB!=nullptr)
        {
            if(nodes.count(headB))
                return headB;
            headB= headB->next;
        }
        return nullptr;
    }
};

//双指针
class Solution {
public:
    
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

        if(headA == nullptr || headB == nullptr) 
            return nullptr;

        ListNode* cur_a = headA;
        ListNode* cur_b = headB;

        while(cur_a != cur_b)
        {
            cur_a = (cur_a ? cur_a->next : headB);
            cur_b = (cur_b ? cur_b->next : headA);
        }

        return cur_a;
    }
};

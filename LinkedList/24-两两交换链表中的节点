//c3
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head==nullptr||head->next==nullptr)
            return head;
        ListNode* reshead = head->next;
        ListNode* pre = new ListNode(-1);
        while(head&&head->next)
        {
            ListNode* nextfirst = head->next->next;
            pre->next = head->next;
            head->next->next = head;
            head->next = nextfirst;
            pre = head;
            head = nextfirst;
        }
        return reshead;
    }
};

//递归
class Solution {
    public:
    ListNode* swapPairs(ListNode* head) {

        // If the list has no node or has only one node left.
        if ((head == nullptr) || (head->next == nullptr))
            return head;

        // Nodes to be swapped
        ListNode* firstNode = head;
        ListNode* secondNode = head->next;

        // Swapping
        firstNode->next  = swapPairs(secondNode->next);
        secondNode->next = firstNode;

        // Now the head is the second node
        return secondNode;
    }
};

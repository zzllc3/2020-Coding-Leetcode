//c3暴力超时
class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {
        vector<int> res;
        res.push_back(0);
        for(int i=T.size()-2;i>=0;--i)
        {
            bool find = false;
            for(int j=i+1;j<T.size();++j)
            {
                if(T[i]<T[j])
                {
                    res.push_back(j-i);
                    find = true;
                    break;
                }
            }
            if(!find)
                res.push_back(0);
        }
        reverse(res.begin(),res.end());
        return res;
    }
};

//暴力能过
class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {
        int n = T.size();
        vector<int> ans(n), next(101, INT_MAX);
        for (int i = n - 1; i >= 0; --i) {
            int warmerIndex = INT_MAX;
            for (int t = T[i] + 1; t <= 100; ++t) {
                warmerIndex = min(warmerIndex, next[t]);
            }
            if (warmerIndex != INT_MAX) {
                ans[i] = warmerIndex - i;
            }
            next[T[i]] = i;
        }
        return ans;
    }
};

//单调栈
class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {
        vector<int> res(T.size(), 0);
        stack<int> stk;
        for (int i = 0; i < T.size(); i ++) {
            while (!stk.empty() && T[i] > T[stk.top()]) {
                res[stk.top()] = i - stk.top();
                stk.pop();
            }
            stk.push(i);
        }
        return res;
    }
};

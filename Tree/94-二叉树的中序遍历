/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 //递归
class Solution {
public:
    void inorderTraversalCore(TreeNode* root, vector<int>& inlist) {
        if(root!=nullptr)
        {
            inorderTraversalCore(root->left,inlist);
            inlist.push_back(root->val);
            inorderTraversalCore(root->right,inlist);
        }
        return;
    }

    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> inlist;
        inorderTraversalCore(root,inlist);
        return inlist;
    }
};

//迭代
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        stack<TreeNode*> stk;
        while (root != nullptr || !stk.empty()) {
            while (root != nullptr) {
                stk.push(root);
                root = root->left;
            }
            root = stk.top();
            stk.pop();
            res.push_back(root->val);
            root = root->right;
        }
        return res;
    }
};
